Option Compare Database

Dim sStudentName, sParentName, sAddress, sCity, sState, sZip, sLabel As String

Dim bytAge, bytInitialsNumber As Byte

Dim boolAllGood, boolRetreivedAge As Boolean

Dim dbs As Database
Dim rs As Recordset


Private Sub btnClear_Click()
     Call clearSignatures
End Sub
Function clearSignatures()
    Me.imgSignature.Picture = Application.CurrentProject.Path & "\images\system\Signatures\blankSignature.bmp"
    Me.txtDate.Value = ""
End Function

Private Sub btnBackToForms_Click()
    DoCmd.OpenForm FormName:="DojoForms"
End Sub

Private Sub btnHome_Click()
    DoCmd.OpenForm FormName:="Home"
End Sub

Private Sub btnPrint_Click()
    Forms(Me.Form.Name).Printer.Orientation = acPRORPortrait
    DoCmd.OpenForm Me.Form.Name, acPreview
    'DoCmd.PrintOut acPages, 1, 1
End Sub

Private Sub btnSubmit_Click()
'On Error Resume Next
    Call validateStudentName 'checks to make sure a student name was entered/selected. sets the variables (boolAllGood, sStudentName)
    If (boolAllGood = True) Then
        Call checkSignatures 'checks to make sure signature is present and all initials are done. sets variable boolAllGood. will msgBox user if there is an issue.
        If (boolAllGood = True) Then
            Call checkForParentNameIfNeeded
            If (boolAllGood = True) Then
                Call saveFormAsPDF
                MsgBox ("Form submitted. ")
                Call clearForm
            End If
        End If
    End If
End Sub

Function checkForParentNameIfNeeded()
    If (Me.combo18orOlder.Value = "YES") Then
        'do nothing, no parent name is needed
        boolAllGood = True
        Me.txtParentName.BorderColor = 12566463 'grey
    Else
        'check to make sure there is a parent name
        sParentName = ""
        sParentName = Me.txtParentName.Value
        If (sParentName = "") Then
            MsgBox ("Please add a parent name, or select 'YES' for 'Are you 18 or older' ")
            Me.txtParentName.BorderColor = 255 'red
            Me.combo18orOlder.BorderColor = 255
        Else
            boolAllGood = True
            Me.txtParentName.BorderColor = 12566463 'grey
        End If
    End If
End Function

Function clearForm()
    Call clearinititalsCaptures
    Me.comboStudentName1.Value = ""
    Me.comboStudentName2.Value = ""
    Me.txtAddress.Value = ""
End Function
Function saveFormAsPDF()
    Dim sFilePathAndName As String
    sFilePathAndName = (Application.CurrentProject.Path & "\Signed Forms\Waiver of Liability " & sStudentName & ".pdf")
    DoCmd.OutputTo acOutputForm, "", acFormatPDF, sFilePathAndName, False
End Function

Function checkSignatures() 'checks to make sure signature is present and all initials are done. sets variable boolAllGood. will msgBox user if there is an issue.
    sFilePathBlankSignature = (Application.CurrentProject.Path & "\images\system\Signatures\blankSignature.bmp")
    
    'MsgBox ("sFilePathBlankSignature = " & sFilePathBlankSignature)
    'MsgBox ("Me.imgSignature.Picture = " & Me.imgSignature.Picture)
    boolAllGood = True
    'check signature panel
    If (Me.imgSignature.Picture = sFilePathBlankSignature) Then
        boolAllGood = False
        MsgBox ("You need to sign the form first before you can submit. ")
        Me.imgSignature.BorderColor = 255 'red
    Else
        Me.imgSignature.BorderColor = 12566463 'grey
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials1.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 1")
            Me.initials1.BorderColor = 255 'red
        Else
            Me.initials1.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials2.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 2")
            Me.initials2.BorderColor = 255 'red
        Else
            Me.initials2.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials3.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 3")
            Me.initials3.BorderColor = 255 'red
        Else
            Me.initials3.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials4.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 4")
            Me.initials4.BorderColor = 255 'red
        Else
            Me.initials4.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials5.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 5")
            Me.initials5.BorderColor = 255 'red
        Else
            Me.initials5.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials6.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 6")
            Me.initials6.BorderColor = 255 'red
        Else
            Me.initials6.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials7.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 7")
            Me.initials7.BorderColor = 255 'red
        Else
            Me.initials7.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials8.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 8")
            Me.initials8.BorderColor = 255 'red
        Else
            Me.initials8.BorderColor = 12566463 'grey
        End If
    End If
    
    If (boolAllGood = True) Then
        If (Me.initials9.Picture = sFilePathBlankSignature) Then
            boolAllGood = False
            MsgBox ("Please initial item 9")
            Me.initials9.BorderColor = 255 'red
        Else
            Me.initials9.BorderColor = 12566463 'grey
        End If
    End If
    
End Function

Function validateStudentName() 'checks to make sure a student name was entered/selected. sets the variables (boolAllGood, sStudentName)
    'MsgBox ("me.comboStudentName.Value = " & Me.comboStudentName.Value)
    If (Me.comboStudentName1.Value = "" Or IsNull(Me.comboStudentName1.Value)) Then 'if student name is null or empty string
        MsgBox "please enter a value for student name"
        Me.comboStudentName1.BorderColor = 255 'red
        Me.comboStudentName1.SetFocus
        boolAllGood = False
    Else
        Me.comboStudentName1.BorderColor = 15921906 'very light grey
        sStudentName = Me.comboStudentName1.Value
        boolAllGood = True
    End If
End Function

Private Sub combo18orOlder_AfterUpdate()
    If (Me.combo18orOlder.Value = "YES") Then
        Me.lblParentName.Visible = False
        Me.txtParentName.Visible = False
    Else
        Me.lblParentName.Visible = True
        Me.txtParentName.Visible = True
    End If
End Sub

Private Sub comboStudentName1_Click()
    sStudentName = "": sAddress = "": sParentName = ""
    
    
    sStudentName = Me.comboStudentName1.Value 'get the student name
    Call getStudentAddressAndParentName 'takes the variable sStudentName, sets the variables (sAddress, sParentName)
    Call getStudentAge 'takes the variable sStudentname, sets the variables (boolRetreivedAge, bytAge)
    If (boolRetreivedAge = True) Then
        If (bytAge >= 18) Then
            Me.combo18orOlder.Value = "YES"
            Me.lblParentName.Visible = False
            Me.txtParentName.Visible = False
        Else
            Me.combo18orOlder.Value = "NO"
            Me.lblParentName.Visible = True
            Me.txtParentName.Visible = True
            Me.txtParentName.Value = sParentName
        End If
    End If
    
    Me.comboStudentName2.Value = sStudentName
    Me.txtAddress.Value = sAddress
End Sub
Function getStudentAge() 'takes the variable sStudentname, sets the variables (boolRetreivedAge, bytAge)
    On Error Resume Next
    bytAge = 0
    'Call connectToDB 'this was already done in the previous function
    sSQL = "SELECT s.[age] FROM Students AS s WHERE s.[studentName] = '" & sStudentName & "';"
    Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
    If rs.RecordCount > 0 Then
        bytAge = rs.Fields(0)
    End If
    
    If (bytAge = 0) Then boolRetreivedAge = False Else boolRetreivedAge = True
End Function
Function getStudentAddressAndParentName() 'takes the variable sStudentName, sets the variables (sAddress, sParentName)
    On Error Resume Next
    sParentName = ""
    sAddress = ""
    sCity = ""
    sState = ""
    sZip = ""
        
    Call connectToDB
    sSQL = "SELECT s.[parentName], s.[address], s.[city], s.[state], s.[zipCode] FROM Students AS s WHERE s.[studentName] = '" & sStudentName & "';"
    Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
    If rs.RecordCount > 0 Then
        sParentName = rs.Fields(0)
        sAddress = rs.Fields(1)
        sCity = rs.Fields(2)
        sState = rs.Fields(3)
        sZip = rs.Fields(4)
        
        If (sAddress = "") Or IsNull(sAddress) Then
            sAddress = ""
        Else: sAddress = (sAddress & " " & sCity & ", " & sState & " " & sZip)
        End If
    End If
    
End Function
Function connectToDB()
    Set dbs = CurrentDb
End Function

Private Sub comboStudentName2_Click()
    sStudentName = "": sAddress = "": sParentName = ""
    
    sStudentName = Me.comboStudentName2.Value 'get the student name
    Call getStudentAddressAndParentName 'takes the variable sStudentName, sets the variables (sAddress, sParentName)
    Call getStudentAge 'takes the variable sStudentname, sets the variables (boolRetreivedAge, bytAge)
    MsgBox ("bytAge = " & bytAge)
    If (boolRetreivedAge = True) Then
        If (bytAge >= 18) Then
            Me.combo18orOlder.Value = "YES"
            Me.lblParentName.Visible = False
            Me.txtParentName.Visible = False
        Else
            Me.combo18orOlder.Value = "NO"
            Me.lblParentName.Visible = True
            Me.txtParentName.Visible = True
            Me.txtParentName.Value = sParentName
        End If
    End If
    
    Me.comboStudentName1.Value = sStudentName
    Me.txtAddress.Value = sAddress
End Sub


Private Sub Form_Open(Cancel As Integer)
    Call clearinititalsCaptures
End Sub

Function makeSubmitButtonUnckickable()
    Me.btnSubmit.Enabled = False
End Function

Function clearinititalsCaptures()
    sFilePathBlankSignature = (Application.CurrentProject.Path & "\images\system\Signatures\blankSignature.bmp")
    Me.imgSignature.Picture = sFilePathBlankSignature
    Me.initials1.Picture = sFilePathBlankSignature
    Me.initials2.Picture = sFilePathBlankSignature
    Me.initials3.Picture = sFilePathBlankSignature
    Me.initials4.Picture = sFilePathBlankSignature
    Me.initials5.Picture = sFilePathBlankSignature
    Me.initials6.Picture = sFilePathBlankSignature
    Me.initials7.Picture = sFilePathBlankSignature
    Me.initials8.Picture = sFilePathBlankSignature
    Me.initials9.Picture = sFilePathBlankSignature
End Function

Private Sub imgSignatureParent_Click()
    If (Me.txtParentName.Value = "(if under 18)" Or IsNull(Me.txtParentName.Value) Or (Me.txtParentName.Value = "")) Then
        MsgBox ("You must first enter a name for parent")
    Else
        DoCmd.OpenForm FormName:="SignatureCapture"
        Forms!signatureCapture!lblSignature.Caption = "Parent Signature - Sparring Policy"
        Forms!signatureCapture!inititalsCapture.Ink.DeleteStrokes
        Forms!signatureCapture!.Refresh
    End If
End Sub

Function enableSubmitButton()
    Me.btnSubmit.Enabled = True
End Function

Private Sub imgSignatureStudent_Click()
    Call enableSubmitButton
    DoCmd.OpenForm FormName:="SignatureCapture"
    Forms!signatureCapture!lblSignature.Caption = "Student Signature - Sparring Policy"
    Forms!signatureCapture!inititalsCapture.Ink.DeleteStrokes
    Forms!signatureCapture!.Refresh
End Sub



Function makeSureParentSignatureIsPresent() 'sets the variable boolParentSigPresent
    If (Me.imgSignatureParent.Picture = sFilePathBlankSignature) Then
        'parent did not sign.
        boolParentSigPresent = False
    Else: boolParentSigPresent = True
    End If
End Function


Private Sub imgSignature_Click()
    Call enableSubmitButton
    DoCmd.OpenForm FormName:="SignatureCapture"

    Forms!signatureCapture!lblSignature.Caption = "Signature - Waiver of Liability"
    Forms!signatureCapture!signaturePanel.Ink.DeleteStrokes
    Forms!signatureCapture!.Refresh
End Sub

Private Sub initials1_Click()
    bytInitialsNumber = 1
    Call openInitialsCapture
End Sub

Private Sub initials2_Click()
    bytInitialsNumber = 2
    Call openInitialsCapture
End Sub

Function openInitialsCapture()
    sLabel = "Initials part " & bytInitialsNumber
    DoCmd.OpenForm FormName:="InitialsCapture"
    Forms!InitialsCapture!lblSignature.Caption = sLabel
    Forms!InitialsCapture!inititalsCapture.Ink.DeleteStrokes
    Forms!InitialsCapture!.Refresh
End Function

Private Sub initials3_Click()
    bytInitialsNumber = 3
    Call openInitialsCapture
End Sub

Private Sub initials4_Click()
    bytInitialsNumber = 4
    Call openInitialsCapture
End Sub

Private Sub initials5_Click()
    bytInitialsNumber = 5
    Call openInitialsCapture
End Sub

Private Sub initials6_Click()
    bytInitialsNumber = 6
    Call openInitialsCapture
End Sub

Private Sub initials7_Click()
    bytInitialsNumber = 7
    Call openInitialsCapture
End Sub

Private Sub initials8_Click()
    bytInitialsNumber = 8
    Call openInitialsCapture
End Sub

Private Sub initials9_Click()
    bytInitialsNumber = 9
    Call openInitialsCapture
End Sub
