Option Compare Database

Dim sStudentName As String

Dim boolAllGood As Boolean


Private Sub btnClear_Click()
     Call clearSignatures
End Sub
Function clearSignatures()
    Me.imgSignatureParent.Picture = Application.CurrentProject.Path & "\system\blankSignature.jpg"
    Me.imgSignatureStudent.Picture = Application.CurrentProject.Path & "\system\blankSignature.jpg"
    Me.txtDateParent.Value = ""
    Me.txtDateStudent.Value = ""
    Me.btnSubmit.Enabled = False
End Function

Private Sub btnBackToForms_Click()
    DoCmd.OpenForm FormName:="DojoForms"
End Sub

Private Sub btnHome_Click()
    DoCmd.OpenForm FormName:="Home"
End Sub

Private Sub btnPrint_Click()
    Forms(Me.Form.Name).Printer.Orientation = acPRORPortrait
    DoCmd.OpenForm Me.Form.Name, acPreview
    'DoCmd.PrintOut acPages, 1, 1
End Sub

Private Sub btnSubmit_Click()
'On Error Resume Next
    Call validateStudentName 'checks to make sure a student name was entered/selected. sets the variables (boolAllGood, sStudentName)
    If (boolAllGood = True) Then
        Call checkSignatures 'checks to make sure parent signature is present if a parent name was added, and parent name is present if signature added. sets boolAllGood
        If (boolAllGood = True) Then
            Call saveFormAsPDF
            MsgBox ("Sparring Policy form submitted. ")
            Call clearForm
        End If
    End If
End Sub
Function clearForm()
    Call clearSignaturePanels
    Me.btnSubmit.Enabled = False
End Function
Function saveFormAsPDF()
    Dim sFilePathAndName As String
    sFilePathAndName = (Application.CurrentProject.Path & "\Signed Forms\Sparring Policy " & sStudentName & ".pdf")
    DoCmd.OutputTo acOutputForm, "", acFormatPDF, sFilePathAndName, False
End Function

Function checkSignatures() 'checks to make sure parent signature is present if a parent name was added, and parent name is present if signature added. sets boolAllGood
    'we already know that the student section is signed, because the submit button is not enabled until the student panel is signed.
    'make sure that the parent sections is signed if needed
    sBlanksignature = (Application.CurrentProject.Path & "\system\blankSignature.jpg")
    sBlanksignature2 = (Application.CurrentProject.Path & "\images\system\signatures\blankSignature.bmp")
    Dim sUserMessage As String
    Dim userSelection As Integer

    If (Me.txtParentName.Value = "(if under 18)" Or IsNull(Me.txtParentName.Value) Or (Me.txtParentName.Value = "")) Then 'if no parent name is present
        'Parent name is not present. Make sure that the signature wasn't added.
        If (Me.imgSignatureParent.Picture = sBlanksignature) Or (Me.imgSignatureParent.Picture = sBlanksignature2) Then
            'we're good, there is no parent name and no signature
            boolAllGood = True
        Else
            'msgBox the user, parent signature is present but parent name is missing
            sUserMessage = ("It appears that you have added a parent signature but no parent name." & vbCrLf & _
                            "Would you like to clear the parent signature panel?")
            userSelection = MsgBox(sUserMessage, vbYesNo, "Parent name missing")
            If (userSelection = vbYes) Then
                'clear the parent signature panel
                Me.imgSignatureStudent.Picture = sBlanksignature
                boolAllGood = True
            Else
                MsgBox ("Please add parent name")
                Me.txtParentName.SetFocus
                boolAllGood = False 'exit sub not allowed here
            End If
        End If
    Else
        'Parent name is present. Make sure that signature is also present.
        If (Me.imgSignatureParent.Picture = sBlanksignature) Then 'if no signature present then msgBox and exit sub.
            MsgBox "It appears that a parent name was added. If a parent signature is not required, please delete the parent name; otherwise you must add a parent signature. "
            boolAllGood = False 'exit sub not allowed here
        Else: boolAllGood = True 'parent name and signature are both present. we're good.
        End If
    End If
End Function

Function checkParentName() 'sets the variable sParentName
    If (Me.txtParentName.Value = "(if under 18)" Or Me.txtParentName.Value = "" Or IsNull(Me.txtParentName.Value)) Then
        sParentName = ""
    Else: sParentName = Me.txtParentName.Value
    End If
End Function

Function validateStudentName() 'checks to make sure a student name was entered/selected. sets the variables (boolAllGood, sStudentName)
    'MsgBox ("me.comboStudentName.Value = " & Me.comboStudentName.Value)
    If (Me.comboStudentName.Value = "" Or IsNull(Me.comboStudentName.Value)) Then 'if student name is null or empty string
        MsgBox "please enter a value for student name"
        Me.comboStudentName.SetFocus
        boolAllGood = False
    Else
        sStudentName = Me.comboStudentName.Value
        boolAllGood = True
    End If
End Function

Private Sub Form_Open(Cancel As Integer)
    Call clearSignaturePanels
    Call makeSubmitButtonUnckickable
End Sub

Function makeSubmitButtonUnckickable()
    Me.btnSubmit.Enabled = False
End Function

Function clearSignaturePanels()
    sFilePathBlankSignature = (Application.CurrentProject.Path & "\images\system\Signatures\blankSignature.bmp")
    Me.imgSignatureParent.Picture = sFilePathBlankSignature
    Me.imgSignatureStudent.Picture = sFilePathBlankSignature
    Me.comboStudentName.Value = ""
    Me.txtParentName.Value = ""
End Function

Private Sub imgSignatureParent_Click()
    Me.txtDateParent.SetFocus
    If (Me.txtParentName.Value = "(if under 18)" Or IsNull(Me.txtParentName.Value) Or (Me.txtParentName.Value = "")) Then
        MsgBox ("You must first enter a name for parent")
    Else
        DoCmd.OpenForm FormName:="SignatureCapture"
        Forms!signatureCapture!lblSignature.Caption = "Parent Signature - Sparring Policy"
        Forms!signatureCapture!signaturePanel.Ink.DeleteStrokes
        Forms!signatureCapture!.Refresh
    End If
End Sub

Function enableSubmitButton()
    Me.btnSubmit.Enabled = True
End Function

Private Sub imgSignatureStudent_Click()
    Call enableSubmitButton
    DoCmd.OpenForm FormName:="SignatureCapture"
    Forms!signatureCapture!lblSignature.Caption = "Student Signature - Sparring Policy"
    Forms!signatureCapture!signaturePanel.Ink.DeleteStrokes
    Forms!signatureCapture!.Refresh
End Sub



Function makeSureParentSignatureIsPresent() 'sets the variable boolParentSigPresent
    If (Me.imgSignatureParent.Picture = sFilePathBlankSignature) Then
        'parent did not sign.
        boolParentSigPresent = False
    Else: boolParentSigPresent = True
    End If
End Function


