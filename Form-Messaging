Option Compare Database

Dim sEmailBody, sSubject, sUserEmailAddress, sUserName, sRecipients As String

Dim i, iRecordCount As Integer

Dim boolEmailSelected, boolTextSelected, boolOneOrMoreRecipientsSelected, boolConnectedToInternet As Boolean

Dim dbs As DAO.Database
Dim rs As DAO.Recordset

Dim comboBox As Control

Dim oApp As Outlook.Application
Dim oMail As MailItem

Private Declare PtrSafe Function InternetGetConnectedState Lib "wininet.dll" (ByRef dwflags As Long, ByVal dwReserved As Long) As Long

Private Const INTERNET_CONNECTION_MODEM As Long = &H1
Private Const INTERNET_CONNECTION_LAN As Long = &H2
Private Const INTERNET_CONNECTION_PROXY As Long = &H4
Private Const INTERNET_CONNECTION_OFFLINE As Long = &H20

Private Sub btnAttendance_Click()
    DoCmd.OpenForm FormName:="AttendanceTracking"
End Sub
Private Sub btnCalendar_Click()
    Forms("Home").openCalendar
End Sub
Private Sub btnClear_Click()
    Call clearComboBoxes
End Sub
Private Sub btnFinancials_Click()
    DoCmd.OpenForm FormName:="Financials"
End Sub
Private Sub btnForms_Click()
    DoCmd.OpenForm FormName:="DojoForms"
End Sub
Private Sub btnGear_Click()
    DoCmd.OpenForm FormName:="Settings"
End Sub
Private Sub btnHome_Click()
    DoCmd.OpenForm FormName:="Home"
End Sub
Private Sub btnMessaging_Click()
    DoCmd.OpenForm FormName:="Messaging"
End Sub

Private Sub btnRankReq_Click()
    DoCmd.OpenForm FormName:="RankReq"
End Sub




Private Sub btnSend_Click()
'On Error Resume Next
'DoCmd.SetWarnings True
Dim myNameSpace As Outlook.Namespace
    Call makeSureEmailOrTextIsSelected 'sets the variables (boolEmailSelected, boolTextSelected)
    
    If (boolEmailSelected = False) And (boolTextSelected = False) Then
        MsgBox ("You have not selected a delivery method. You must first select text, email, or both.")
        Me.lblCheckEmail.ForeColor = 255 'red
        Me.lblCheckText.ForeColor = 255 'red
    Else
        Me.lblCheckEmail.ForeColor = 8882055 'grey 53
        Me.lblCheckText.ForeColor = 8882055 'grey 53
        
        Call setEmailSubject
        Call getEmailBody 'sets the variable sEmailBody
        If (sEmailBody = "") Or IsNull(sEmailBody) Then
            MsgBox ("You must enter a text value for the message body")
            Me.txtEmailBody.BorderColor = 255 'red
        Else
            Me.txtEmailBody.BorderColor = 12566463 'grey
            If IsInternetConnected() = False Then
                MsgBox ("You are not connected to the Internet or there is an issue with your Internet connection. ")
            Else
                Call connectToOutlook
                Dim boolAllGood As Boolean
                boolAllGood = getAndSetRecipients 'includes error messaging in case anything goes wrong, like recipients selected with missing contact info
                If (boolAllGood = False) Then
                    Exit Sub
                Else
                    Call insertMessageContents
                End If
                'check to make sure user is logged into comm@ekkc-nw.com
                Set myNameSpace = oApp.GetNamespace("MAPI")
                Dim userEmailProf As String
                Me.txtEmailAdProfile.SetFocus: userEmailProf = Me.txtEmailAdProfile.Text
                If (myNameSpace.CurrentUser = userEmailProf) Then
                    Call sendMessageAndGarbageCleanUp
                    MsgBox ("Message sent")
                Else
                    Dim sQuestionToMsgBox As String
                    sQuestionToMsgBox = "You entered " & userEmailProf & " for your Outlook but you are logged into outlook as " & _
                            myNameSpace.CurrentUser & ". Would you like to send as " & myNameSpace.CurrentUser & " instead?"
                    sYesOrNo = MsgBox(sQuestionToMsgBox, vbYesNo, "Profile Mismatch")
                    If (sYesOrNo = vbNo) Then
                        MsgBox ("Make sure you're logged into Outlook with the profile/email address you want to use for sending messages. Your profile name or email in Outlook should match the entry in the text box labeled 'Outlook profile name'")
                        'end function
                    Else
                        Me.txtEmailAdProfile.Value = myNameSpace.CurrentUser
                        Call sendMessageAndGarbageCleanUp
                        MsgBox ("Message sent")
                    End If

                End If
                
            End If
        End If
        
    End If
End Sub



Function IsInternetConnected() As Boolean
    Dim L As Long
    Dim R As Long
    R = InternetGetConnectedState(L, 0&)
    If R = 0 Then
        IsInternetConnected = False
    Else
        If R <= 4 Then IsInternetConnected = True Else IsInternetConnected = False
    End If
End Function

 

Function sendMessageAndGarbageCleanUp()
    oMail.Send
    'oApp.Quit 'this will close all instances of outlook.
    Me.txtEmailAdProfile.DefaultValue = "'" & Me.txtEmailAdProfile.Value & "'" 'set the entered email to the default value so that it will stay there even if the app gets closed and re-opened
    Set oMail = Nothing
    Set oApp = Nothing
End Function

Function getAndSetRecipients() As Boolean
On Error Resume Next
    getAndSetRecipients = True 'Initialized to true. Only set to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
    Dim boolEveryoneChecked As Boolean
    
    'see if "send to everyone" box is checked
    If (Me.checkEveryone.Value = 0) Then
        boolEveryoneChecked = False
    Else
        boolEveryoneChecked = True
        boolOneOrMoreRecipientsSelected = True
    End If
    
    If boolEveryoneChecked = True Then
        getAndSetRecipients = getAndSetRecipientsFromDB
    Else
        getAndSetRecipients = getAndSetRecipientsFromForm
    End If
    
End Function

Function getAndSetRecipientsFromDB() As Boolean 'returns a bool because we need to check if text message is selected. If so, we have to make sure that EVERY student has an sms gateway if even 1 student does not have an sms gateway then we need to alert the user and abort the operation.
On Error Resume Next
    getAndSetRecipientsFromDB = True 'Initialized to true. We only set this to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
    Call connectToDB
    
    'one of the 3 following functions will be called depending on if the user selected email & text, email only, or text only.
    'The respective function will add recipients to oMail.Recipients
    If (boolEmailSelected = True) And (boolTextSelected = True) Then 'if email and sms
        getAndSetRecipientsFromDB = getEmailAndTextContactsFromDB
    ElseIf (boolEmailSelected = True) Then 'just get email addresses
        getAndSetRecipientsFromDB = getEmailContactsFromDB
    Else 'note that we don't have to check here if the text checkbox was checked. If execution has reached this point then we already know that at least one box was checked, and it's not email.
        getAndSetRecipientsFromDB = getSMScontactsFromDB
    End If
    
End Function

Function getEmailAndTextContactsFromDB() As Boolean
        getEmailAndTextContactsFromDB = True 'Initialized to true. We only set this to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
        sSQL = "SELECT s.[studentName], s.[email], s.[smsEmail] FROM Students AS s " & _
               "WHERE s.[active] = 'true';"
        Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
        rs.MoveLast
        iRecordCount = 0
        iRecordCount = rs.RecordCount

        
        If iRecordCount > 0 Then
            rs.MoveFirst
            i = 0
            Do While (i < iRecordCount) '0 is the first record
                sRecipients = ""
                sRecipients = rs.Fields(1) 'email address
                If (sRecipients = "") Or IsNull(sRecipients) Then
                    getEmailAndTextContactsFromDB = False
                    Dim sTitle As String
                    Dim sMainMessage As String
                    sTitle = "Error"
                    sMainMessage = "You are attempting to send this message to all active students via email and text, but 1 or more active students do not have a valid email address on file." & vbCrLf & _
                                    rs.Fields(0) & " does not have an email address on file." & vbCrLf & _
                                   "You must pull up " & rs.Fields(0) & "'s info on the student details page, enter an email address, then save the changes."
                    MsgBox sMainMessage, vbOKOnly, sTitle
                    Exit Do
                Else: oMail.Recipients.Add sRecipients
                End If
                
                If (getEmailAndTextContactsFromDB = False) Then Exit Do 'if at any point we encounter an active student in the database that does not have an email address on file then we exit the loop and the function. Return false (error)
                
                sRecipients = ""
                sRecipients = rs.Fields(2) 'sms address
                If (sRecipients = "") Or IsNull(sRecipients) Then
                    getEmailAndTextContactsFromDB = False
                    Dim sTitle As String
                    Dim sMainMessage As String
                    sTitle = "Error"
                    sMainMessage = "You are attempting to send this message to all active students via email and text, but 1 or more active students do not have a valid sms gateway on file." & vbCrLf & _
                                    rs.Fields(0) & " does not have a valid sms gateway on file." & vbCrLf & _
                                   "You must pull up " & rs.Fields(0) & "'s info on the student details page, make sure there is a valid phone number and carrier/service provider on file, then save the changes."
                    MsgBox sMainMessage, vbOKOnly, sTitle
                    Exit Do
                Else: oMail.Recipients.Add sRecipients
                End If
                
                rs.MoveNext
                i = (i + 1)
            Loop
        End If
        
End Function

Function getEmailContactsFromDB() As Boolean
    getEmailContactsFromDB = True 'Initialized to true. We only set this to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
    sSQL = "SELECT s.[studentName], s.[email] FROM Students AS s " & _
               "WHERE s.[active] = 'true'"
        Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
        rs.MoveLast
        iRecordCount = 0
        iRecordCount = rs.RecordCount

        If iRecordCount > 0 Then
            rs.MoveFirst
            i = 0
            Do While (i < iRecordCount) '0 is the first record
                sRecipients = ""
                sRecipients = rs.Fields(1) 'email address
                If (sRecipients = "") Or IsNull(sRecipients) Then
                    getEmailContactsFromDB = False
                    Dim sTitle As String
                    Dim sMainMessage As String
                    sTitle = "Error"
                    sMainMessage = "You are attempting to send this message to all active students, but 1 or more active students do not have a valid email address on file." & vbCrLf & _
                                    rs.Fields(0) & " does not have an email address on file." & vbCrLf & _
                                   "You must pull up " & rs.Fields(0) & "'s info on the student details page, enter an email address, then save the changes."
                    MsgBox sMainMessage, vbOKOnly, sTitle
                    Exit Do
                Else: oMail.Recipients.Add sRecipients
                End If
                
                If (getAndSetRecipientsFromDB = False) Then Exit Do 'if at any point we encounter an active student in the database that does not have an email address on file then we exit the loop and the function. Return false (error)
                
                rs.MoveNext
                i = (i + 1)
            Loop
        End If
End Function

Function getSMScontactsFromDB() As Boolean
    getSMScontactsFromDB = True 'Initialized to true. We only set this to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
    sSQL = "SELECT s.[studentName] s.[smsEmail] FROM Students AS s"
    Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
    rs.MoveLast
    iRecordCount = 0
    iRecordCount = rs.RecordCount

    If iRecordCount > 0 Then
        rs.MoveFirst
        i = 0
        Do While (i < iRecordCount) '0 is the first record
            sRecipients = ""
            sRecipients = rs.Fields(1) 'sms address
            If (sRecipients = "") Or IsNull(sRecipients) Then
                getSMScontactsFromDB = False
                Dim sTitle As String
                Dim sMainMessage As String
                sTitle = "Error"
                sMainMessage = "You are attempting to send this message to all active students via text, but 1 or more active students do not have a valid sms gateway on file." & vbCrLf & _
                                rs.Fields(0) & " does not have a valid sms gateway on file." & vbCrLf & _
                                "You must pull up " & rs.Fields(0) & "'s info on the student details page, make sure there is a valid phone number and carrier/service provider on file, then save the changes."
                    MsgBox sMainMessage, vbOKOnly, sTitle
                Exit Do
            Else: oMail.Recipients.Add sRecipients
            End If
            
            rs.MoveNext
            i = (i + 1)
        Loop
    End If
End Function



Function getAndSetRecipientsFromForm() As Boolean 'returns a bool because we need to check if text message is selected. If so, we have to make sure that EVERY student has an sms gateway if even 1 student does not have an sms gateway then we need to alert the user and abort the operation.
    Dim boolAllGood As Boolean
    boolAllGood = True 'Initialized to true. Only set to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.
    If (boolEmailSelected = True) Then 'add email addresses
        boolAllGood = addEmailRecipientsFromForm
    Else
    End If
'true here
    If (boolAllGood = False) Then
        'do nothing, an error was encountered that the user needs to fix first.
    ElseIf (boolTextSelected = True) Then 'add text message recipients
        boolAllGood = addTextRecipientsFromForm
    End If

    getAndSetRecipientsFromForm = boolAllGood
End Function

Function addEmailRecipientsFromForm() As Boolean
On Error Resume Next
    Dim sName As String
    Dim emailAddress As String
    Dim sTitle As String
    Dim sMainMessage As String
    
    addEmailRecipientsFromForm = True 'Initialized to true. Only set to false if we encounter an error, like trying to send an email to a student that doesn't have an emial on file.

    i = 1
    Do While (i <= 12) '12 = number of contacts that can be selected on the form
        If (i = 1) Then
            Set comboBox = Me.comboRecipient1
        ElseIf (i = 2) Then Set comboBox = Me.comboRecipient2
        ElseIf (i = 3) Then Set comboBox = Me.comboRecipient3
        ElseIf (i = 4) Then Set comboBox = Me.comboRecipient4
        ElseIf (i = 5) Then Set comboBox = Me.comboRecipient5
        ElseIf (i = 6) Then Set comboBox = Me.comboRecipient6
        ElseIf (i = 7) Then Set comboBox = Me.comboRecipient7
        ElseIf (i = 8) Then Set comboBox = Me.comboRecipient8
        ElseIf (i = 9) Then Set comboBox = Me.comboRecipient9
        ElseIf (i = 10) Then Set comboBox = Me.comboRecipient10
        ElseIf (i = 11) Then Set comboBox = Me.comboRecipient11
        ElseIf (i = 12) Then Set comboBox = Me.comboRecipient12
        End If
        
        'Check each combo box; if student selected, make sure phone number is also present.
        sName = ""
        sName = comboBox.Column(0) '0 = name, 1 = email, 2 = emailAddress

        If (sName = "") Or IsNull(sName) Then
            'skip
        Else
            emailAddress = comboBox.Column(1)
            If (emailAddress = "") Or IsNull(emailAddress) Then
                addEmailRecipientsFromForm = False
                sTitle = "Error"
                sMainMessage = "You are attempting to send this message to " & sName & ", but " & sName & " does not have a valid email on file." & vbCrLf & _
                                "You must pull up " & sName & "'s info on the student details page, make sure there is a valid email on file, then save the changes."
                MsgBox sMainMessage, vbOKOnly, sTitle
                Exit Do
            Else
                oMail.Recipients.Add emailAddress
            End If
        End If
        
        i = (i + 1)
    Loop
    
    If (addEmailRecipientsFromForm = False) Then
        'do nothing, an error was encountered that the user needs to fix.
    Else
        'now we need to test that at least one recipient was added
        If (oMail.Recipients.Count = 0) Then
            addEmailRecipientsFromForm = False
            sTitle = "Error"
            sMainMessage = "Please select 1 or more recipients."
            MsgBox sMainMessage, vbOKOnly, sTitle
        End If
    End If

End Function

Function addTextRecipientsFromForm() As Boolean
On Error Resume Next
    Dim sName As String
    Dim smsAddress As String
    Dim sTitle As String
    Dim sMainMessage As String
    
    addTextRecipientsFromForm = True 'Initialized to true. Only set to false if we encounter an error, like trying to send a text to a student that doesn't have an smsGateway on file.
    
    i = 1
    Do While (i <= 12) '12 = number of contacts that can be selected on the form
        If (i = 1) Then
            Set comboBox = Me.comboRecipient1
        ElseIf (i = 2) Then Set comboBox = Me.comboRecipient2
        ElseIf (i = 3) Then Set comboBox = Me.comboRecipient3
        ElseIf (i = 4) Then Set comboBox = Me.comboRecipient4
        ElseIf (i = 5) Then Set comboBox = Me.comboRecipient5
        ElseIf (i = 6) Then Set comboBox = Me.comboRecipient6
        ElseIf (i = 7) Then Set comboBox = Me.comboRecipient7
        ElseIf (i = 8) Then Set comboBox = Me.comboRecipient8
        ElseIf (i = 9) Then Set comboBox = Me.comboRecipient9
        ElseIf (i = 10) Then Set comboBox = Me.comboRecipient10
        ElseIf (i = 11) Then Set comboBox = Me.comboRecipient11
        ElseIf (i = 12) Then Set comboBox = Me.comboRecipient12
        End If
        
        'Check each combo box; if student selected, make sure phone number is also present.
        sName = ""
        sName = comboBox.Column(0) '0 = name, 1 = email, 2 = smsAddress
        If (sName = "") Or IsNull(sName) Then
            'skip
        Else
            smsAddress = comboBox.Column(2)
            If (smsAddress = "") Or IsNull(smsAddress) Then
                addTextRecipientsFromForm = False
                sTitle = "Error"
                sMainMessage = "You are attempting to send this message to " & sName & ", but " & sName & " does not have a valid sms gateway on file." & vbCrLf & _
                                "You must pull up " & sName & "'s info on the student details page, make sure there is a valid phone number and carrier/service provider on file, then save the changes."
                MsgBox sMainMessage, vbOKOnly, sTitle
            Else
                oMail.Recipients.Add smsAddress
            End If
        End If
        
        i = (i + 1)
    Loop
    
    If (addTextRecipientsFromForm = False) Then
        'do nothing. an error was encountered that the user needs to fix.
    Else
        'now we need to test that at least one recipient was added
        If (oMail.Recipients.Count = 0) Then
            addTextRecipientsFromForm = False
            sTitle = "Error"
            sMainMessage = "Please select 1 or more recipients."
            MsgBox sMainMessage, vbOKOnly, sTitle
        End If
    End If
    
End Function

Function connectToDB()
    Set dbs = CurrentDb
End Function

Function insertMessageContents()
    oMail.Body = sEmailBody
    oMail.Subject = sSubject
End Function

Function connectToOutlook()
    Call getOutlookIfOpen
    If oApp Is Nothing Then
        Call openNewInstanceOfOutlook
    End If
    
    Set oMail = oApp.CreateItem(olMailItem)
End Function

Function getOutlookIfOpen()
    On Error Resume Next
    Set oApp = GetObject(, "Outlook.Application")
End Function

Function openNewInstanceOfOutlook()
    Shell ("OUTLOOK")
    Set oApp = CreateObject("Outlook.application")
End Function

Function getEmailBody() 'sets the variable sEmailBody
    On Error Resume Next
    sEmailBody = Me.txtEmailBody.Value
End Function

Function setEmailSubject()
    If (Me.txtSubject.Value = "") Or IsNull(Me.txtSubject.Value) Then
        sSubject = ""
    Else: sSubject = Me.txtSubject.Value
    End If
End Function

Function makeSureEmailOrTextIsSelected() 'sets the variables (boolEmailSelected, boolTextSelected)
    If (Me.checkEmail = 1) Or (Me.checkEmail = -1) Then ' if email checked
        boolEmailSelected = True
    Else: boolEmailSelected = False
    End If
    
    If (Me.checkText = 1) Or (Me.checkText = -1) Then ' if text checked
        boolTextSelected = True
    Else: boolTextSelected = False
    End If
    
End Function


Private Sub btnStudents_Click()
    DoCmd.OpenForm FormName:="Students"
End Sub
