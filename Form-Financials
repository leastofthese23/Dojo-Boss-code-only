Option Compare Database

Dim sSQL As String

Dim iIncomeFromStudentsDues As Integer

Dim sglTotalIncome As Single, sglTotalExpenses As Single, sglTotalProfit As Single


Dim dbs As Database
Dim rs As DAO.Recordset


Private Sub btnAttendance_Click()
    DoCmd.OpenForm FormName:="Attendance"
End Sub

Private Sub btnCalendar_Click()
    Forms("Home").openCalendar
End Sub

Private Sub btnForms_Click()
    DoCmd.OpenForm FormName:="DojoForms"
End Sub

Private Sub btnGear_Click()
    DoCmd.OpenForm FormName:="Settings"
End Sub

Private Sub btnHome_Click()
    DoCmd.OpenForm FormName:="Home"
End Sub

Private Sub btnMessaging_Click()
    DoCmd.OpenForm FormName:="Messaging"
End Sub

Private Sub btnRankReq_Click()
    DoCmd.OpenForm FormName:="RankReq"
End Sub

Private Sub btnRefresh_Click()
    Call refreshForm
End Sub

Private Sub btnStudents_Click()
    DoCmd.OpenForm FormName:="Students"
End Sub

Private Sub btnTimeInRank_Click()
    DoCmd.OpenForm FormName:="Students"
End Sub

Private Sub Form_GotFocus()
    Call refreshForm
End Sub



Function getAndDisplayTotalProfit() 'takes the variables (sglTotalExpenses, sglTotalIncome)
'On Error Resume Next
    sglTotalProfit = 0.001
    sglTotalProfit = (sglTotalIncome - sglTotalExpenses)
    If (sglTotalProfit = 0.001) Then
        Me.txtProfit.Value = "error"
    Else
        Me.txtProfit.Value = sglTotalProfit
        If (sglTotalProfit <= 0) Then
            Me.txtProfit.ForeColor = 255 'red
        Else
            Me.txtProfit.ForeColor = 6737152 'green
        End If
    End If
End Function

Function getTotalExpenses() 'sets the variable sglTotalExpenses
On Error Resume Next 'in case we run into a null value on any of these don't throw an error, just skip to the next one and keep adding.
    sglTotalExpenses = 0
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense1.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense2.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense3.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense4.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense5.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense6.Value)
    sglTotalExpenses = (sglTotalExpenses + Me.txtExpense7.Value)
End Function

Function displayTotalExpenses() 'takes the variable sglTotalExpenses
    Me.txtTotalExpenses.Value = sglTotalExpenses
End Function

Function getTotalIncomeFromTextBoxes() 'sets the variable sglTotalIncome
On Error Resume Next 'in case we run into a null value on any of these don't throw an error, just skip to the next one and keep adding.
    sglTotalIncome = 0
    sglTotalIncome = (sglTotalIncome + Me.txtIncome1.Value)
    sglTotalIncome = (sglTotalIncome + Me.txtIncome2.Value)
    sglTotalIncome = (sglTotalIncome + Me.txtIncome3.Value)
    sglTotalIncome = (sglTotalIncome + Me.txtIncome4.Value)
    sglTotalIncome = (sglTotalIncome + Me.txtIncome5.Value)
    sglTotalIncome = (sglTotalIncome + Me.txtIncome6.Value)
End Function

Function displayTotalIncome() 'takes the variable sglTotalIncome
    Me.txtTotalIncome.Value = sglTotalIncome
End Function

Function getIncomeFromStudentsDues()
    Call connectToDB
    sSQL = "SELECT SUM(monthlyRate) FROM Students;"
    Set rs = dbs.OpenRecordset(sSQL, dbOpenDynaset)
    If rs.RecordCount > 0 Then
        rs.MoveFirst
        iIncomeFromStudentsDues = rs.Fields(0)
    Else
        iIncomeFromStudentsDues = 0
    End If

End Function

Function displayIncomeFromStudentsDues()
    If (iIncomeFromStudentsDues = 0) Then
        Me.txtIncome1.Value = "error"
    Else
        Me.txtIncome1.Value = iIncomeFromStudentsDues
    End If
End Function

Function connectToDB()
    Set dbs = CurrentDb
End Function

Private Sub Form_Load()
    Call refreshForm
End Sub

Private Sub txtRent_AfterUpdate()
    Call refreshForm
End Sub

Private Sub imgRates_Click()
    Dim sTitle As String
    Dim sMainMessage As String
        
    sTitle = "Rates"
        
    sMainMessage = "The rates table is for reference purposes only." & vbCrLf & _
                       "It is for you to keep a record of the standard rates that you charge for students." & vbCrLf & _
                       "If you change any values in this table it will not affect data anywhere else."
    
    MsgBox sMainMessage, vbOKOnly, sTitle

End Sub



Function refreshForm()
    'On Error Resume Next
    Call getIncomeFromStudentsDues
    Call displayIncomeFromStudentsDues
    Call getTotalIncomeFromTextBoxes 'sets the variable sglTotalIncome
    Call displayTotalIncome 'takes the variable sglTotalIncome
    Call getTotalExpenses 'sets the variable sglTotalExpenses
    Call displayTotalExpenses 'takes the variable sglTotalExpenses
    Call getAndDisplayTotalProfit 'takes the variables (sglTotalExpenses, sglTotalIncome)
    Me.Refresh
End Function

Function quickRefresh()
    Call getTotalIncomeFromTextBoxes 'sets the variable sglTotalIncome
    Call displayTotalIncome 'takes the variable sglTotalIncome
    Call getTotalExpenses 'sets the variable sglTotalExpenses
    Call displayTotalExpenses 'takes the variable sglTotalExpenses
    Call getAndDisplayTotalProfit 'takes the variables (sglTotalExpenses, sglTotalIncome)
    Me.Refresh
End Function

Private Sub txtExpense1_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense2_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense3_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense4_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense5_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense6_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtExpense7_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome1_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome2_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome3_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome4_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome5_AfterUpdate()
    Call quickRefresh
End Sub

Private Sub txtIncome6_AfterUpdate()
    Call quickRefresh
End Sub
